import streamlit as st
from multiapp import MultiApp

import pandas as pd
import numpy as np
import io

import plotly.express as px
import plotly.io as pio

import matplotlib.pyplot as plt
import seaborn as sns

from pandas_profiling import ProfileReport
from streamlit_pandas_profiling import st_profile_report

from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet
from sklearn.neural_network import MLPClassifier
from sklearn.neighbors import KNeighborsClassifier, KNeighborsRegressor
from sklearn.svm import SVC, SVR
from sklearn.gaussian_process import GaussianProcessClassifier
from sklearn.gaussian_process.kernels import RBF
from sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis

from itertools import product
from sklearn.metrics import classification_report, roc_curve
from sklearn.model_selection import train_test_split, cross_val_score, KFold
from sklearn.metrics import confusion_matrix

st.set_page_config(
    page_title="Easy ML", page_icon='üíô',
)

app = MultiApp()


# TODO: –¥–æ–±–∞–≤–∏—Ç—å –æ–≥–ª–∞–≤–ª–µ–Ω–∏—è –∏–∑ —è–∫–æ—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ –∫–∞–∂–¥—É—é –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü

def load_dataset():
    st.sidebar.markdown("""
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö

    –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç 
    –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞ 
    [Titanic - Machine Learning from Disaster](www.kaggle.com/c/titanic/).
    """)

    uploaded_file = st.sidebar.file_uploader('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Ç–∏–ø–∞ csv. –õ–∏–º–∏—Ç: 200MB',
                                             type='csv')

    if uploaded_file is not None:
        dataset = pd.read_csv(uploaded_file)

        return dataset

    st.sidebar.info("–°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç")
    return pd.read_csv('example_dataset.csv')


def home_app():
    dataset = load_dataset()
    st.markdown("""
    # README.md
    
    –≠—Ç–æ –ø—Ä–æ–µ–∫—Ç, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –≤–∞–º –±—ã—Å—Ç—Ä–æ –æ—Ü–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞.
    –¢–∞–∫–∂–µ –∑–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö 
    –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫–∂–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ç–µ–π—à–∏—Ö
    –º–æ–¥–µ–ª–µ–π –Ω–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ. 
     
    –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
    - –í—ã–±—Ä–∞—Ç—å –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞;
    - –ü–æ—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ–∏—á–µ–π –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞;
    - –û–±—É—á–∏—Ç—å –ø—Ä–æ—Å—Ç–µ–π—à–∏–µ –º–æ–¥–µ–ª–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–ª–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –Ω–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
    
    –í –º–µ–Ω—é —Å–ª–µ–≤–∞ –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç –∏ 
    –≤—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—á–∫—É –¥—è–ª –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    """)

    st.image('images/main_img.png')


def data_app():
    dataset = load_dataset()
    st.title('–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞—Ç–∞—Å–µ—Ç–∞ —á–µ—Ä–µ–∑ Pandas')

    st.markdown("""
    –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:\n
    1. <a href='#part1.1'>–°—ç–º–ø–ª –¥–∞–Ω–Ω—ã—Ö</a>
    2. <a href='#part1.2'>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–∞—Å–µ—Ç–µ</a>
    3. <a href='#part1.3'>–¢–∞–±–ª–∏—Ü–∞ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏</a>
    4. <a href='#part1.4'>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–æ—á–∫–∏</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –ü—Ä–µ–∂–¥–µ —á–µ–º –ø—ã—Ç–∞—Ç—å—Å—è –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É—è –≥—Ä–∞—Ñ–∏–∫–∏, –∏ —Å—Ç—Ä–æ–∏—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –º–æ–¥–µ–ª–∏
    –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø—Ä–æ—Å—Ç–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –∑–∞ –¥–∞–Ω–Ω—ã–µ –≤—Ö–æ–¥—è—Ç –≤ –¥–∞—Ç–∞—Å–µ—Ç.
    
    –î–ª—è —ç—Ç–æ–≥–æ —Å—Ç–æ–∏—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã —Å –¥–∞–Ω–Ω—ã–º–∏, —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å,
    –≤ –∫–∞–∫–æ–º —Ñ–æ—Ä–º–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ –º–æ–∂–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å
    –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏. –í—Å—ë —ç—Ç–æ –ª–µ–≥–∫–æ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `pandas`.
    """)

    st.markdown("""
    ## <a id='part1.1'>–°—ç–º–ø–ª –¥–∞–Ω–Ω—ã—Ö</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –ü—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –Ω–µ–±–æ–ª—å—à—É—é –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —á–∞—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ –æ–Ω–∞ –≤—ã–≥–ª—è–¥–∏—Ç.
    –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ `pandas.DataFrame.sample`
    """)

    sample_len = st.slider('–í–µ–ª–∏—á–∏–Ω–∞ —Å—ç–º–ø–ª–∞', min_value=5, max_value=10, value=7)

    dataset_sample = dataset.sample(sample_len)
    st.dataframe(dataset_sample)

    if st.button('–û–±–Ω–æ–≤–∏—Ç—å —Å—ç–º–ø–ª'):
        dataset_sample = dataset.sample(sample_len)

    st.markdown("""
    ## <a id='part1.2'>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–∞—Å–µ—Ç–µ</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –¢–∞–∫–∂–µ –±—ã–≤–∞–µ—Ç –ø–æ–ª–µ–∑–Ω–æ –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ —Ç–æ, –∫–∞–∫–∏–º–∏ —Ç–∏–ø–∞–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ. 
    –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ `pandas.DataFrame.info`. 
    
    –û–Ω –≤—ã–≤–æ–¥–∏—Ç —Ç—Ä–∏ —Å—Ç–æ–ª–±—Ü–∞: –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–Ω—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –∏—Ö —Ç–∏–ø.
    """)

    buffer = io.StringIO()
    dataset.info(buf=buffer)
    st.text(buffer.getvalue())

    st.markdown("""
    ## <a id='part1.3'>–¢–∞–±–ª–∏—Ü–∞ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –° –ø–æ–º–æ—â—å—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ–≥–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π `pandas` –¥–ª—è –∫–ª–∞—Å—Å–∞ `DataFrame`
    –º–æ–∂–Ω–æ —Å –ª–µ–≥–∫–æ—Å—Ç—å—é –≤—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–º –∏–ª–∏ –∏–Ω—ã–º –ª–æ–≥–∏—á–µ—Å–∫–∏–º –∑–Ω–∞—á–µ–Ω–∏—è–º.
    –≠—Ç–æ –∫—Ä—É—á–µ, —á–µ–º Excel-—Ç–∞–±–ª–∏—Ü—ã –∏ SQL-–∑–∞–ø—Ä–æ—Å—ã.
    
    –í–æ–∑—å–º–µ–º –≤—Å–µ —Å—Ç–æ–ª–±—Ü—ã —Å —á–∏—Å–ª–∞–º–∏ (`pandas.DataFrame._get_numeric_data` –∏–ª–∏ –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ 
    `pandas.DataFrame.select_dtypes(include=np.number).columns.tolist()`), 
    —Å–¥–µ–ª–∞–µ–º –¥–ª—è –Ω–∏—Ö —Å–ª–∞–π–¥–µ—Ä—ã
    –∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏, –∏—Å–ø–æ–ª—å–∑—É—è –∑–Ω–∞—á–µ–Ω–∏—è, –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –Ω–∏—Ö.
    """)

    numeric_columns = dataset.select_dtypes(include=np.number).columns.tolist()

    sliders = {}

    dataset_columns = list(dataset.columns)
    allowed_columns = st.multiselect('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', dataset_columns,
                                     default=dataset_columns)

    with st.beta_expander('–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –∫–æ–ª–æ–Ω–æ–∫'):
        for column in numeric_columns:
            sliders[column] = st.slider(column, min(dataset[column]), max(dataset[column]),
                                        (min(dataset[column]), max(dataset[column])))

    filtered_data = dataset.copy()
    for column in numeric_columns:
        filtered_data = filtered_data[(filtered_data[column] >= sliders[column][0]) &
                                      (filtered_data[column] <= sliders[column][1])]

    st.dataframe(filtered_data[allowed_columns])

    st.markdown("""
    ## <a id='part1.4'>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–æ—á–∫–∏</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –ò –ø–æ–¥ –∫–æ–Ω–µ—Ü –ø–æ–¥–µ–ª—é—Å—å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç–∞–∫ –∏–ª–∏ –∏–Ω–∞—á–µ –±—ã–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã 
    –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—á–∫–∏.
    
    1. [Pandas User Guide](pandas.pydata.org/docs/user_guide/index.html#user-guide). 
        –û—á–µ–≤–∏–¥–Ω–æ, —á—Ç–æ –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–æ–π —á–∞—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —è–≤–ª—è–µ—Ç—Å—è
        –∑–∞–≥–ª—è–¥—ã–≤–∞–Ω–∏–µ –≤ –µ—ë –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é. 
    2. [Data Analysis with pandas - 30 Days Of Python](youtu.be/g_rfQQC2BjA). –ö–∞–Ω–∞–ª 
        —Ö–æ—Ä–æ—à–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ Python, —É –∫–æ—Ç–æ—Ä–≥–æ –µ—Å—Ç—å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –Ω–∞ Udemy –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ
        —Ä–æ–ª–∏–∫–∏ –Ω–∞ Youtube.
    3. [HSE: –ù–∞—É–∫–∞ –æ –¥–∞–Ω–Ω—ã—Ö](math-info.hse.ru/2020-21/–ù–∞—É–∫–∞_–æ_–¥–∞–Ω–Ω—ã—Ö). –ü–æ–Ω—è—Ç–Ω—ã–π –∫—É—Ä—Å –¥–ª—è 
        –Ω–µ–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –ø–æ –¥–æ–ª–≥—É —Å–ª—É–∂–±—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å python –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö.
    """)


def graphics_app():
    dataset = load_dataset()

    PALETTE_LIST_SEABORN = ['Accent', 'Accent_r', 'Blues', 'Blues_r', 'BrBG', 'BrBG_r', 'BuGn',
                            'BuGn_r',
                            'BuPu', 'BuPu_r', 'CMRmap', 'CMRmap_r', 'Dark2', 'Dark2_r', 'GnBu',
                            'GnBu_r',
                            'Greens', 'Greens_r',
                            'Greys', 'Greys_r', 'OrRd', 'OrRd_r', 'Oranges', 'Oranges_r', 'PRGn',
                            'PRGn_r',
                            'Paired', 'Paired_r',
                            'Pastel1', 'Pastel1_r', 'Pastel2', 'Pastel2_r', 'PiYG', 'PiYG_r', 'PuBu',
                            'PuBuGn', 'PuBuGn_r', 'PuBu_r', 'PuOr', 'PuOr_r', 'PuRd', 'PuRd_r',
                            'Purples',
                            'Purples_r',
                            'RdBu', 'RdBu_r', 'RdGy', 'RdGy_r', 'RdPu', 'RdPu_r', 'RdYlBu',
                            'RdYlBu_r',
                            'RdYlGn',
                            'RdYlGn_r', 'Reds', 'Reds_r', 'Set1', 'Set1_r', 'Set2', 'Set2_r', 'Set3',
                            'Set3_r',
                            'Spectral', 'Spectral_r', 'Wistia', 'Wistia_r', 'YlGn', 'YlGnBu',
                            'YlGnBu_r',
                            'YlGn_r',
                            'YlOrBr', 'YlOrBr_r', 'YlOrRd', 'YlOrRd_r', 'afmhot', 'afmhot_r',
                            'autumn',
                            'autumn_r', 'binary', 'binary_r',
                            'bone', 'bone_r', 'brg', 'brg_r', 'bwr', 'bwr_r', 'cividis', 'cividis_r',
                            'cool',
                            'cool_r', 'coolwarm', 'coolwarm_r', 'copper', 'copper_r',
                            'cubehelix', 'cubehelix_r', 'flag', 'flag_r', 'gist_earth',
                            'gist_earth_r',
                            'gist_gray', 'gist_gray_r', 'gist_heat', 'gist_heat_r', 'gist_ncar',
                            'gist_ncar_r', 'gist_rainbow', 'gist_rainbow_r', 'gist_stern',
                            'gist_stern_r',
                            'gist_yarg', 'gist_yarg_r', 'gnuplot', 'gnuplot2', 'gnuplot2_r',
                            'gnuplot_r',
                            'gray', 'gray_r', 'hot', 'hot_r', 'hsv', 'hsv_r', 'icefire', 'icefire_r',
                            'inferno', 'inferno_r', 'magma', 'magma_r', 'mako', 'mako_r',
                            'nipy_spectral', 'nipy_spectral_r', 'ocean', 'ocean_r', 'pink', 'pink_r',
                            'plasma', 'plasma_r', 'prism', 'prism_r', 'rainbow', 'rainbow_r',
                            'rocket', 'rocket_r', 'seismic', 'seismic_r', 'spring', 'spring_r',
                            'summer', 'summer_r', 'tab10', 'tab10_r', 'tab20', 'tab20_r', 'tab20b',
                            'tab20b_r', 'tab20c', 'tab20c_r', 'terrain', 'terrain_r', 'twilight',
                            'twilight_r', 'twilight_shifted', 'twilight_shifted_r', 'viridis',
                            'viridis_r',
                            'vlag', 'vlag_r', 'winter', 'winter_r']
    dataset_columns = list(dataset.columns)
    numeric_columns = dataset.select_dtypes(include=np.number).columns.tolist()

    st.title('–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤')

    st.markdown("""
    –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:\n
    1. <a href='#part2.1'>–ü–∞—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏</a>
    2. <a href='#part2.2'>–ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è</a>
    3. <a href='#part2.3'>–ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞</a>
    4. <a href='#part2.4'>Heatmap</a>
    5. <a href='#part2.5'>Pandas Profiling</a>
    6. <a href='#part2.6'>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–æ—á–∫–∏</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ –≤ Python —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ü–µ–ª—ã–π —Ä—è–¥ –±–∏–±–ª–∏–æ—Ç–µ–∫.
    –ü–æ–º–∏–º–æ –±–∞–∑–æ–≤–æ–≥–æ `matplotlib.pyplot` –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π `pandas`, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å 
    –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ [seaborn](seaborn.pydata.org/)  –∏ [plotnine]
    (plotnine.readthedocs.io/en/stable/). 
    –û–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤.
    
    –¢–∞–∫–∂–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ç–∞–∫–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫, 
    –∫–∞–∫ [bokeh](bokeh.org/), 
    [altair](altair-viz.github.io/gallery/index.html#interactive-charts) –∏ 
    [plotly](plotly.com/python/) 
    –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏, –Ω–æ –∏ –∞–Ω–∏–º–∞—Ü–∏–∏!
    
    [Seaborn](seaborn.pydata.org/) 
    —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∏–±–æ–ª–µ–µ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤. 
    –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–¥ `import seaborn`, —Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å—Ç–∞–Ω—É—Ç –≥–æ—Ä–∞–∑–¥–æ —Å–∏–º–ø–∞—Ç–∏—á–Ω–µ–µ. 
    –ü–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç—Ç—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –¥–∞–Ω–Ω—ã—Ö.
    """)

    st.markdown("""
    ## <a id='part2.1'>–ü–∞—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –î–∞–Ω—ã–π –≤–∏–¥ –≥—Ä–∞—Ñ–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É –≤—Å–µ–º–∏ –ø–∞—Ä–∞–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ
    –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ. –¢–∞–∫–∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–º–µ—Ç—Ä—ã pairplot –ø–æ–∑–≤–æ–ª—è—é—Ç
    —Ä–∞—Å–∫—Ä–∞—Å–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∫–∞–∫–æ–π-–ª–∏–±–æ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.
    
    –ß—Ç–æ–±—ã –ø–æ—Å—Ç—Ä–æ–∏—Ç—å pairplot –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é `seaborn.pairplot`. 
    –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å 
    [–∑–¥–µ—Å—å](seaborn.pydata.org/generated/seaborn.pairplot.html).
    """)

    def display_pairplot(df, columns, hue, palette):
        pairplot = sns.pairplot(df[columns], hue=hue, palette=palette)
        st.pyplot(pairplot)

    with st.beta_expander('–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞'):
        allowed_columns = st.multiselect('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞', dataset_columns,
                                         default=dataset_columns)

        pairplot_hue_columns = allowed_columns
        for elem in pairplot_hue_columns:
            if len(dataset[elem].unique()) > 100:
                pairplot_hue_columns.remove(elem)

        pairplot_hue = st.selectbox('–°—Ç–æ–ª–±–µ—Ü –¥–ª—è –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ—Ç–∞',
                                    [None] + pairplot_hue_columns)

    with st.beta_expander('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞'):
        pairplot_palette = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ª–∏—Ç—Ä—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞',
                                        PALETTE_LIST_SEABORN, key='pairplot_palette')

    st.write("\n\n")
    if st.button('–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫', key='pairplot_button'):
        try:
            display_pairplot(dataset, allowed_columns, pairplot_hue, pairplot_palette)
        except Exception:
            st.info("""
            –ü—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
            """)

    st.markdown("""
    ## <a id='part2.2'>–ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è </a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ñ–∏—á–∏ –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞ –º–æ–∂–Ω–æ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
    –ø—Ä–∏ –ø–æ–º–æ—â–∏ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∞ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è. 
    
    –¢–æ—Ç –∏ –¥—Ä—É–≥–æ–π –≤–∏–¥ –¥–∏–∞–≥—Ä–∞–º–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∏ –ø–æ–º–æ—â–∏ –µ–¥–∏–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    `seaborn.distplot`. –ü–µ—Ä–µ–¥–µ–≤–∞—è –≤ –Ω–µ—ë –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç `kind` –º–æ–∂–Ω–æ
    —É–∫–∞–∑–∞—Ç—å, –∫–∞–∫–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤–∏–¥ –¥–∏–∞–≥—Ä–∞–º–º—ã –≤–≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å. –ü—Ä–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å 
    [—Ç—É—Ç](seaborn.pydata.org/generated/seaborn.displot.html#seaborn.displot).
    """)

    def display_distplot(df, column, kind, palette='Blues'):
        sns.set_palette(palette)
        fig = sns.displot(data=df, x=column, kind=kind)
        st.pyplot(fig)

    with st.beta_expander('–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞'):
        distplot_kind = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞', ['hist', 'kde', 'ecdf'])

        distplot_column = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è',
                                       dataset_columns)
    st.write("\n\n")

    with st.beta_expander('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞'):
        distplot_palette = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ª–∏—Ç—Ä—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞',
                                        PALETTE_LIST_SEABORN)
    st.write("\n\n")

    if st.button('–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫', key='distplot_button'):
        try:
            display_distplot(dataset, distplot_column, distplot_kind, distplot_palette)
        except Exception:
            st.info("""
            –ü—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
            """)

    st.markdown("""
    ## <a id='part2.3'>–ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–ª—É–∂–∏—Ç —Ä–æ–≤–Ω–æ –¥–ª—è —Ç–µ—Ö –∂–µ —Ü–µ–ª–µ–π, —á—Ç–æ –∏ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞, –Ω–æ 
    —Å –µ—ë –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–º–µ–Ω–Ω–æ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.
    
    –†–∞–¥–∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è, –ø–æ—Å—Ç—Ä–æ–∏–º –µ—ë —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ [plotly](plotly.com/python/).
    –ù–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è `plotly.express.pie`. –ì—Ä–∞—Ñ–∏–∫–∏, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    —è–≤–ª—è—é—Ç—Å—è –∏–Ω—Ç–µ—Ä–∫—Ç–∏–≤–Ω—ã–º–∏, —Ç–∞–∫ —á—Ç–æ –ø–æ–º–∏–º–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é, 
    –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ —á–∞—Å—Ç–∏ –¥–∏–∞–≥—Ä–∞–º–º—ã. –ë–æ–ª—å—à–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ [—Å—Å—ã–ª–∫–µ](plotly.com/python/pie-charts).
    """)

    def display_pieplot(df, values, names, hover_data=None, template=None):
        if values == names:
            st.info('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã. –ò–Ω–∞—á–µ –∫—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –Ω–µ–∏–Ω—Ñ—Ä–æ–º–∞—Ç–∏–≤–Ω–æ–π')
        else:
            fig = px.pie(df, values=values, names=names, hover_data=hover_data, template=template)
            fig.update_traces(textposition='inside', textinfo='percent+label')
            st.plotly_chart(fig)

    with st.beta_expander('–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞'):
        values_column = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü –∑–Ω–∞—á–µ–Ω–∏–π',
                                     dataset_columns)

        names_column = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ',
                                    dataset_columns)

        pieplot_hover_data = st.multiselect('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±—Ü—ã —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π',
                                            dataset_columns)
    st.write('\n\n')

    with st.beta_expander('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞'):
        pieplot_template = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞',
                                        [None] + list(pio.templates))
    st.write('\n\n')

    if st.button('–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫', key='pieplot_button'):
        try:
            display_pieplot(dataset, values_column, names_column, pieplot_hover_data,
                            pieplot_template)
        except Exception:
            st.info("""
            –ü—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
            """)

    st.markdown("""
    ## <a id='part2.4'>Heatmap</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤ —á–∏—Å–ª–æ–≤–æ–º —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–µ —Å–∫–æ—Ä—Ä–µ–ª–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∏–∑–Ω–∞–∫–∏
    –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–ø–ª–æ–≤—É—é –∫–∞—Ä—Ç—É. –ü–µ—Ä–µ–¥ —ç—Ç–∏–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç—Ä–∏—Ü—É –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
    —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `DataFrame.corr`, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ–ª—É—á–∏–≤—à—É—é—Å—è –º–∞—Ç—Ä–∏—Ü—É –≤ 
    —Ñ—É–Ω–∫—Ü–∏—é `seaborn.heatmap`. –ü–æ—Å–ª–µ–¥–Ω—è—è –º–æ–∂–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Ü–≤–≤–µ—Ç–æ–º –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏,
    –Ω–æ –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –≤ 
    [–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏](seaborn.pydata.org/generated/seaborn.heatmap.html).
    """)

    def display_heatmap(df, columns, annot, palette='Blues'):
        fig, ax = plt.subplots()
        sns.heatmap(df[columns].corr(), ax=ax, annot=annot, linewidths=.5, square=True, fmt='.2f',
                    palette=palette)
        st.write(fig)

    with st.beta_expander('–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞'):
        heatmap_annotation = st.selectbox('–ù—É–∂–Ω–æ –ª–∏ –≤—ã–≤–æ–¥–∏—Ç—å —Ü–∏—Ñ—Ä—ã –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏', [True, False])

        heatmap_columns = st.multiselect('–í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞',
                                         numeric_columns, default=numeric_columns)
    st.write('\n\n')

    with st.beta_expander('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞'):
        heatmap_palette = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞',
                                       PALETTE_LIST_SEABORN)

    st.write('\n\n')
    if st.button('–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫', key='heatmap_button'):
        try:
            display_heatmap(dataset, heatmap_columns, heatmap_annotation, heatmap_palette)
        except Exception:
            st.info("""
            –ü—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
            """)

    st.markdown("""
    ## <a id='part2.5'>Pandas Profiling</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äì –ø—Ä–æ—Ü–µ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, –∞ [Pandas Profiling](
    towardsdatascience.com/10-simple-hacks-to-speed-up-your-data-analysis-in-python-ec18c6396e6b) 
    ‚Äì Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç —ç—Ç–æ. –ü—Ä–æ—Å—Ç–æ–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π 
    –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö Python Pandas DataFrame. 
    
    –§—É–Ω–∫—Ü–∏–∏ pandas df.describe() –∏ df.info(), –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø–µ—Ä–≤—ã–º —à–∞–≥–æ–º –≤ 
    –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤. –ù–æ —ç—Ç–æ –¥–∞—ë—Ç –ª–∏—à—å –±–∞–∑–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ 
    –¥–∞–Ω–Ω—ã—Ö –∏ –º–∞–ª–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏ –±–æ–ª—å—à–∏—Ö –Ω–∞–±–æ—Ä–∞—Ö. –ó–∞—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è Pandas Profiling –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–Ω–æ–≥–æ 
    –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞ –∏ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º HTML-–æ—Ç—á—ë—Ç–µ.

    –î–ª—è –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç Pandas Profiling –≤—ã—á–∏—Å–ª—è–µ—Ç —Å–ª–µ–¥—É—é—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:
    """)

    st.image('images/profiling.png',
             caption='–í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ø–∞–∫–µ—Ç–µ Pandas Profiling')

    st.markdown("""–í—Å—ë, —á—Ç–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ - —ç—Ç–æ –ø–∞—Ä–∞ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞.""")

    st.code("""
    # –∏–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    import pandas as pd
    import pandas_profiling
    
    pandas_profiling.ProfileReport(your_dataset)
    """)

    if st.button('–ü–æ—Å—Ç—Ä–æ–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', key='profile_button'):
        profile = ProfileReport(dataset)
        st_profile_report(profile)

    st.markdown("""
    ## <a id='part2.6'>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–æ—á–∫–∏</a>
    """, unsafe_allow_html=True)

    st.markdown("""
    1. [The Python Graph Gallery](www.python-graph-gallery.com/).
        –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤,
        –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Python.
    2. [–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏](pythonplot.com/).
        –¢—É—Ç –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–≤–∏–¥–µ—Ç—å, —á–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ
        –≤–∏–¥—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏. –≠—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ 
        —Å—Ä–∞–≤–≤–Ω–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞, –Ω–æ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ
        –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.
    3. [Seaborn documentation](seaborn.pydata.org/index.html).
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ seaborn, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤.
    4. [Color Guide to Seaborn Palettes]
    (medium.com/@morganjonesartist/color-guide-to-seaborn-palettes-da849406d44f).
        –ù–µ–±–æ–ª—å—à–∞—è —Å—Ç–∞—Ç—å—è —Å Medium, –≤ –∫–æ—Ç–æ—Ä–æ–π –∞–≤—Ç–æ—Ä –Ω–µ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ
        –ø–∞–ª–∏—Ç—Ä—ã —Ü–≤–µ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ seaborn, –Ω–æ –µ—â–µ –∏ —Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ–∏–∫–∏
        —Å –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —Å—Ä–∞–∑—É —Ä–µ—à–∏—Ç—å, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ
        –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è—Ö.
    5. [Plotly Open Source Python Library](plotly.com/python/).
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ Plotly. –ù–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—É—Ç–∞–Ω–Ω–∞—è, –Ω–æ –∑–∞—Ç–æ —Å–Ω–∞–±–∂–µ–Ω–Ω–∞—è 
        –æ–≥—Ä–æ–º–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∂–∏–≤—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤.
        
    6. [Pandas Profiling](github.com/pandas-profiling/pandas-profiling).
        –°—Å—ã–ª–∫–∞ –Ω–∞ –≥–∏—Ç—Ö–∞–± –ø—Ä–æ–µ–∫—Ç–∞. –¢–∞–º –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ —ç—Ç–∞ –ø–æ–ø—É–ª—è—Ä–Ω–∞—è 
        –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –∏–∑–Ω—É—Ç—Ä–∏.
    """)


def model_app():
    dataset = load_dataset()
    dataset_columns = list(dataset.columns)
    numeric_columns = dataset.select_dtypes(include=np.number).columns.tolist()

    st.markdown("""
    # –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
    
    –ú–Ω–æ–≥–∏–µ –∑–∞–¥–∞—á–∏, —Ä–µ—à–∞–µ–º—ã–µ —Å –ø–æ–º–æ—â—å—é ML, –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –æ–¥–Ω–æ–π –∏–∑ –¥–≤—É—Ö —Å–ª–µ–¥—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:
    
    1. –ó–∞–¥–∞—á–∞ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ ‚Äì –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±–æ—Ä–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏. 
    –ù–∞ –≤—ã—Ö–æ–¥–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ (2, 35, 76.454 –∏ –¥—Ä.), 
    –∫ –ø—Ä–∏–º–µ—Ä—É —Ü–µ–Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã, —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏ –ø–æ –ø—Ä–æ—à–µ—Å—Ç–≤–∏–∏ –ø–æ–ª—É–≥–æ–¥–∞, 
    –æ–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü, –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–Ω–∞ –ø—Ä–∏ —Å–ª–µ–ø–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏.
    2. –ó–∞–¥–∞—á–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ ‚Äì –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–±–æ—Ä–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤. 
    –ò–º–µ–µ—Ç –∫–æ–Ω–µ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤ (–∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´–¥–∞¬ª –∏–ª–∏ ¬´–Ω–µ—Ç¬ª): 
    –µ—Å—Ç—å –ª–∏ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫–æ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –ª–∏—Ü–æ–º, –±–æ–ª–µ–Ω –ª–∏ –ø–∞—Ü–∏–µ–Ω—Ç —Ä–∞–∫–æ–º.
    
    –ü—Ä–æ –¥—Ä—É–≥–∏–µ –º–æ–∂–Ω–æ –ø—Ä–æ—á–µ—Å—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ [—Å—Ç–∞—Ç—å–µ](habr.com/ru/post/448892/) –Ω–∞ –•–∞–±—Ä–µ.
    –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫ —Ä–µ–∞–ª–∏–∑—É—é—Ç
    —Å–µ–±—è —Ç–µ –∏–ª–∏ –∏–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –Ω–∞ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ. –¢–æ –µ—Å—Ç—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞–∑–∞—Ç—å, 
    –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–∞–∫–æ–º —Å—Ç–æ–ª–±—Ü–µ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å, –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–æ–±—ä—é—Ç—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—É—é –∏ 
    —Ç–µ—Å—Ç–æ–≤—É—é –≤—ã–±–æ—Ä–∫–∏, –º–æ–¥–µ–ª—å –æ–±—É—á–∏—Ç—Å—è, –ø—Ä–µ–¥—Å–∫–∞–∂–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ, –∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ
    –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–∑–Ω–∞—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è –Ω—É–∂–Ω—É—é –º–µ—Ç—Ä–∏–∫—É.
    
    –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä–∞—è —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–¥ –≤–∞–º–∏: –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–ª–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏—è.
    """)

    task = st.selectbox('–ó–∞–¥–∞—á–∞', [' ', '–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è', '–†–µ–≥—Ä–µ—Å—Å–∏—è'])

    if task == '–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è':
        classification_target = st.selectbox(
            '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–æ–Ω–∫—É, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å',
            [None] + dataset_columns)

        if classification_target is None:
            st.info('–í—ã–±–µ—Ä–∏—Ç–µ target. –î–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ —Å–ª–µ–¥—É–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Å—Ç–æ–ª–±–µ—Ü Survived.')
        else:
            with st.beta_expander('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏'):
                classification_test_size = st.slider('–†–∞–∑–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–∏ –æ—Ç –≤—Å–µ–≥–æ '
                                                     '–æ–±—ä–µ–º–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞', min_value=0.1, max_value=0.5,
                                                     step=0.05, value=0.3)

                features = numeric_columns
                if classification_target in features:
                    features.remove(classification_target)
                classification_features = st.multiselect('–ü—Ä–∏–∑–Ω–∞–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏',
                                                         features, default=features)

                classification_random_state = st.selectbox('–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞ '
                                                           '–≤—ã–¥–∞–≤–∞–ª–∞ —Ç–µ –∂–µ –∑–Ω–∞—á–µ–Ω–∏—è?', [False, True])
                if classification_random_state:
                    classification_random_state = 17
                else:
                    classification_random_state = None

                models = {
                    "Nearest Neighbors": KNeighborsClassifier(3),
                    "Linear SVM": SVC(kernel="linear", C=0.025, probability=True),
                    "RBF SVM": SVC(gamma=2, C=1, probability=True),
                    "Gaussian Process": GaussianProcessClassifier(1.0 * RBF(1.0)),
                    "Decision Tree": DecisionTreeClassifier(max_depth=5),
                    "Random Forest": RandomForestClassifier(max_depth=5, n_estimators=10,
                                                            max_features=1),
                    "Neural Net": MLPClassifier(alpha=1, max_iter=1000),
                    "AdaBoost": AdaBoostClassifier(),
                    "Naive Bayes": GaussianNB(),
                    "QDA": QuadraticDiscriminantAnalysis()}

                classification_model_name = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏',
                                                         list(models.keys()))

            if st.button('–û–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å', key='model_button'):
                df = dataset.dropna()

                X = df[classification_features]
                y = df[classification_target]

                X_train, X_test, y_train, y_test = train_test_split(X, y,
                                                                    test_size=
                                                                    classification_test_size,
                                                                    random_state=
                                                                    classification_random_state)

                model = models[classification_model_name]
                model.fit(X_train, y_train)

                def plot_confusion_matrix(cm, classes, normalize=False, title='–ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫'):

                    plt.imshow(cm, interpolation='nearest', cmap='Blues')
                    plt.title(title)
                    plt.colorbar()
                    tick_marks = np.arange(len(classes))
                    plt.xticks(tick_marks, classes, rotation=45)
                    plt.yticks(tick_marks, classes)

                    if normalize:
                        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]
                        st.info("–ü–æ—Å—Ç—Ä–æ–µ–Ω–∞ –æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫")
                    else:
                        st.info('–ü–æ—Å—Ç—Ä–æ–µ–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫ –±–µ–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏')

                    thresh = cm.max() / 2.
                    for i, j in product(range(cm.shape[0]), range(cm.shape[1])):
                        plt.text(j, i, cm[i, j],
                                 horizontalalignment="center",
                                 color="white" if cm[i, j] > thresh else "black")

                    plt.tight_layout()
                    plt.ylabel('–ò—Å—Ç–∏–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –∫–ª–∞—Å—Å–∞')
                    plt.xlabel('–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –∫–ª–∞—Å—Å–∞')

                font = {'size': 15}
                plt.rc('font', **font)
                plt.figure(figsize=(10, 8))

                cnf_matrix = confusion_matrix(y_test, model.predict(X_test))

                st.markdown("""
                ## –ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫
                
                –ü–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –∫ —Å–∞–º–∏–º –º–µ—Ç—Ä–∏–∫–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –≤–∞–∂–Ω—É—é –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è 
                —ç—Ç–∏—Ö –º–µ—Ç—Ä–∏–∫ –≤ —Ç–µ—Ä–º–∏–Ω–∞—Ö –æ—à–∏–±–æ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ ‚Äî confusion matrix (–º–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫).
                –î–æ–ø—É—Å—Ç–∏–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –∫–ª–∞—Å—Å–∞ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º, –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—é—â–∏–π –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å 
                –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –æ–¥–Ω–æ–º—É –∏–∑ –∫–ª–∞—Å—Å–æ–≤, —Ç–æ–≥–¥–∞ –º–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±—É–¥–µ—Ç 
                –≤—ã–≥–ª—è–¥–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
                
                <table style="margin: 10px auto">
                  <tr>
                    <td></td>
                    <td>y = 0</td>
                    <td>y = 1</td>
                  </tr>
                  <tr>
                    <td>y' = 1</td>
                    <td>True Positive (TP)</td>
                    <td>False Positive (FP)</td>
                  </tr>
                  <tr>
                    <td>y' = 0</td>
                    <td>False Negative (FN)</td>
                    <td>True Negative (TN)</td>
                  </tr>
                </table>
                
                –ó–¥–µ—Å—å y' ‚Äî —ç—Ç–æ –æ—Ç–≤–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç–µ, –∞ y ‚Äî –∏—Å—Ç–∏–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –∫–ª–∞—Å—Å–∞ 
                –Ω–∞ —ç—Ç–æ–º –æ–±—ä–µ–∫—Ç–µ. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ—à–∏–±–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±—ã–≤–∞—é—Ç –¥–≤—É—Ö –≤–∏–¥–æ–≤: 
                False Negative (FN) –∏ False Positive (FP).
                """, unsafe_allow_html=True)

                plot_confusion_matrix(cnf_matrix, classes=['Non-churned', 'Churned'],
                                      title='–ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫')

                st.pyplot(plt)

                st.markdown("""
                ## Precision, recall –∏ F-–º–µ—Ä–∞
                
                –î–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –Ω–∞ –∫–∞–∂–¥–æ–º –∏–∑ –∫–ª–∞—Å—Å–æ–≤ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ 
                –≤–≤–µ–¥–µ–º –º–µ—Ç—Ä–∏–∫–∏ $precision$ (—Ç–æ—á–Ω–æ—Å—Ç—å) –∏ $recall$ (–ø–æ–ª–Ω–æ—Ç–∞).
            
                """)
                st.latex(r'precision = \frac{TP}{TP + FP}')
                st.latex(r'recall = \frac{TP}{TP + FN}')

                st.markdown("""
                $Precision$ –º–æ–∂–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –¥–æ–ª—é –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º 
                –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏ –ø—Ä–∏ —ç—Ç–æ–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —è–≤–ª—è—é—â–∏–º–∏—Å—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏, 
                –∞ $recall$ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫—É—é –¥–æ–ª—é –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏–∑ –≤—Å–µ—Ö 
                –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–∞—à–µ–ª –∞–ª–≥–æ—Ä–∏—Ç–º.
                
                –ò–º–µ–Ω–Ω–æ –≤–≤–µ–¥–µ–Ω–∏–µ $precision$ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –≤ –æ–¥–∏–Ω –∫–ª–∞—Å—Å, 
                —Ç–∞–∫ –∫–∞–∫ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º—ã –ø–æ–ª—É—á–∞–µ–º —Ä–æ—Å—Ç —É—Ä–æ–≤–Ω—è False Positive. 
                $Recall$ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –≤–æ–æ–±—â–µ, 
                –∞ $precision$ ‚Äî —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ—Ç–ª–∏—á–∞—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å –æ—Ç –¥—Ä—É–≥–∏—Ö –∫–ª–∞—Å—Å–æ–≤.
                
                –û–±—ã—á–Ω–æ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–±–æ—Ä–∞ –ø–æ 
                —Å–µ—Ç–∫–µ `GridSearchCV` ) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–¥–Ω–∞ –º–µ—Ç—Ä–∏–∫–∞, —É–ª—É—á—à–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –º—ã –∏ –æ–∂–∏–¥–∞–µ–º 
                —É–≤–∏–¥–µ—Ç—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ.
                
                –°—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å precision –∏ recall –≤ 
                –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫—Ä–∏—Ç–µ—Ä–∏–π –∫–∞—á–µ—Å—Ç–≤–∞. $F-–º–µ—Ä–∞$ (–≤ –æ–±—â–µ–º —Å–ª—É—á–∞–µ $F_Œ≤$) ‚Äî —Å—Ä–µ–¥–Ω–µ–µ 
                –≥–∞—Ä–º–æ–Ω–∏—á–µ—Å–∫–æ–µ $precision$ –∏ $recall$:
                """)

                st.latex(r"F_Œ≤ = (1 + \beta^2) \cdot \frac{precision \cdot recall}"
                         r"{(Œ≤^2 \cdot precision) + recall}")

                st.markdown("""$Œ≤$ –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–µ—Å —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤ –º–µ—Ç—Ä–∏–∫–µ, –∏ –ø—Ä–∏ $Œ≤=1$ 
                —ç—Ç–æ —Å—Ä–µ–¥–Ω–µ–µ –≥–∞—Ä–º–æ–Ω–∏—á–µ—Å–∫–æ–µ (—Å –º–Ω–æ–∂–∏—Ç–µ–ª–µ–º 2, —á—Ç–æ–±—ã –≤ —Å–ª—É—á–∞–µ 
                $precision=1$ –∏ $recall=1$ –∏–º–µ—Ç—å $F_1=1$). 
                $F-–º–µ—Ä–∞$ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç –º–∞–∫—Å–∏–º—É–º–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ—Ç–µ –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏, —Ä–∞–≤–Ω—ã–º–∏ –µ–¥–∏–Ω–∏—Ü–µ, 
                –∏ –±–ª–∏–∑–∫–∞ –∫ –Ω—É–ª—é, –µ—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –±–ª–∏–∑–æ–∫ –∫ –Ω—É–ª—é.
                –í `sklearn` –µ—Å—Ç—å —É–¥–æ–±–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è `metrics.classification_report`, 
                –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è $recall$, $precision$ –∏ $F-–º–µ—Ä—É$ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –∫–ª–∞—Å—Å–æ–≤, 
                –∞ —Ç–∞–∫–∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞.
                """)

                report = classification_report(y_test, model.predict(X_test))
                st.code('Classification report:\n\n' + report)

                st.markdown("""
                ## ROC-–∫—Ä–∏–≤–∞—è
                
                –ü—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ (–∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ 
                –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ –∫–ª–∞—Å—Å—É, –æ—Ç–¥–µ–ª—å–Ω–æ —Å–º. SVM) –≤ –±–∏–Ω–∞—Ä–Ω—É—é –º–µ—Ç–∫—É, –º—ã –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å 
                –∫–∞–∫–æ–π-–ª–∏–±–æ –ø–æ—Ä–æ–≥, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º 0 —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è 1. –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏ –±–ª–∏–∑–∫–∏–º –∫–∞–∂–µ—Ç—Å—è –ø–æ—Ä–æ–≥, 
                —Ä–∞–≤–Ω—ã–π 0.5, –Ω–æ –æ–Ω –Ω–µ –≤—Å–µ–≥–¥–∞ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º, –Ω–∞–ø—Ä–∏–º–µ—Ä,
                –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –∫–ª–∞—Å—Å–æ–≤.

                –û–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –æ—Ü–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å –≤ —Ü–µ–ª–æ–º, –Ω–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞—è—Å—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ—Ä–æ–≥—É, 
                —è–≤–ª—è–µ—Ç—Å—è AUC-ROC (–∏–ª–∏ ROC AUC) ‚Äî –ø–ª–æ—â–∞–¥—å (Area Under Curve) –ø–æ–¥ –∫—Ä–∏–≤–æ–π –æ—à–∏–±–æ–∫ 
                (Receiver Operating Characteristic curve ). –î–∞–Ω–Ω–∞—è –∫—Ä–∏–≤–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è 
                –ª–∏–Ω–∏—é –æ—Ç (0,0) –¥–æ (1,1) –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö True Positive Rate (TPR) –∏ False Positive 
                Rate (FPR):
                """)

                st.latex(r"TPR=\frac{TP}{TP + FN}")
                st.latex(r"FPR=\frac{FP}{FP + TN}")

                st.write("""TPR –Ω–∞–º —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–∞, —ç—Ç–æ –ø–æ–ª–Ω–æ—Ç–∞, –∞ FPR –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫—É—é –¥–æ–ª—é –∏–∑ 
                –æ–±—ä–µ–∫—Ç–æ–≤ negative –∫–ª–∞—Å—Å–∞ –∞–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª –Ω–µ–≤–µ—Ä–Ω–æ. –í –∏–¥–µ–∞–ª—å–Ω–æ–º —Å–ª—É—á–∞–µ, 
                –∫–æ–≥–¥–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–µ –¥–µ–ª–∞–µ—Ç –æ—à–∏–±–æ–∫ (FPR = 0, TPR = 1) –º—ã –ø–æ–ª—É—á–∏–º –ø–ª–æ—â–∞–¥—å –ø–æ–¥ 
                –∫—Ä–∏–≤–æ–π, —Ä–∞–≤–Ω—É—é –µ–¥–∏–Ω–∏—Ü–µ; –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω–æ –≤—ã–¥–∞–µ—Ç 
                –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Å–æ–≤, AUC-ROC –±—É–¥–µ—Ç —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ 0.5, —Ç–∞–∫ –∫–∞–∫ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±—É–¥–µ—Ç 
                –≤—ã–¥–∞–≤–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ TP –∏ FP.
                –ö–∞–∂–¥–∞—è —Ç–æ—á–∫–∞ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã–±–æ—Ä—É –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ—Ä–æ–≥–∞. –ü–ª–æ—â–∞–¥—å –ø–æ–¥ 
                –∫—Ä–∏–≤–æ–π –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ (–±–æ–ª—å—à–µ ‚Äî –ª—É—á—à–µ), –∫—Ä–æ–º–µ —ç—Ç–æ–≥–æ, 
                –≤–∞–∂–Ω–æ–π —è–≤–ª—è–µ—Ç—Å—è –∫—Ä—É—Ç–∏–∑–Ω–∞ —Å–∞–º–æ–π –∫—Ä–∏–≤–æ–π ‚Äî –º—ã —Ö–æ—Ç–∏–º –º–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å TPR, –º–∏–Ω–∏–º–∏–∑–∏—Ä—É—è 
                FPR, –∞ –∑–Ω–∞—á–∏—Ç, –Ω–∞—à–∞ –∫—Ä–∏–≤–∞—è –≤ –∏–¥–µ–∞–ª–µ –¥–æ–ª–∂–Ω–∞ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ —Ç–æ—á–∫–µ (0,1).
                """)

                sns.set(font_scale=1.5)
                sns.set_color_codes("muted")

                plt.figure(figsize=(10, 8))

                fpr, tpr, thresholds = roc_curve(y_test, model.predict_proba(X_test)[:, 1],
                                                 pos_label=1)

                lw = 2
                plt.plot(fpr, tpr, lw=lw, label='ROC curve')
                plt.plot([0, 1], [0, 1])
                plt.xlim([0.0, 1.0])
                plt.ylim([0.0, 1.05])
                plt.xlabel('False Positive Rate')
                plt.ylabel('True Positive Rate')
                plt.title('ROC-–∫—Ä–∏–≤–∞—è')
                st.pyplot(plt)
                # TODO:
                #  —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
                #  UndefinedMetricWarning: No positive samples in y_true, true positive value
                #  should be meaningless –Ω–∞ –ò—Ä–∏—Å–∞—Ö –§–∏—à–µ—Ä–∞

                st.markdown("""
                –ö—Ä–∏—Ç–µ—Ä–∏–π AUC-ROC —É—Å—Ç–æ–π—á–∏–≤ –∫ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–ª–∞—Å—Å–∞–º 
                (—Å–ø–æ–π–ª–µ—Ä: —É–≤—ã, –Ω–µ –≤—Å—ë —Ç–∞–∫ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ) –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å 
                —Ç–æ–≥–æ, —á—Ç–æ —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π positive –æ–±—ä–µ–∫—Ç –±—É–¥–µ—Ç –ø—Ä–æ—Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º 
                –≤—ã—à–µ (–±—É–¥–µ—Ç –∏–º–µ—Ç—å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –±—ã—Ç—å positive), —á–µ–º —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π 
                negative –æ–±—ä–µ–∫—Ç.
                """)

                st.markdown("""
                ## –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
                
                –†–∞–∑—É–º–µ–µ—Ç—Å—è –∑–¥–µ—Å—å —Ä–∞—Å—Å–º–æ—Ä–µ–Ω—ã –Ω–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ –∑–∞–¥–∞—á–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏, 
                –Ω–∞–ø—Ä–∏–º–µ—Ä, "–∑–∞–±—ã–ª–∏" –ø—Ä–æ –±–∞–Ω–∞–ª—å–Ω—ã–π accuracy –∏–∑-–∑–∞ –ø–ª–æ—Ö–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º–æ—Å—Ç–∏
                —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –Ω–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∏, –∫ –ø—Ä–∏–º–µ—Ä—É, logic loss. –ù–æ –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç —ç—Ç–æ
                –≤—Å—ë –Ω–µ —É–º–µ—Å—Ç–∏—à—å, –ø–æ—ç—Ç–æ–º—É –Ω–∏–∂–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è:
                
                1. [Classifier comparison](
                scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html)
                . –ü—Ä–∏–º–µ—Ä—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `sklearn` —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏.
                2. [–ú–µ—Ç—Ä–∏–∫–∏ –≤ –∑–∞–¥–∞—á–∞—Ö –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è]
                (habr.com/ru/company/ods/blog/328372/). –¢–µ–∫—Å—Ç –æ –º–µ—Ç—Ä–∏–∫–∞—Ö –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –≤–∑—è—Ç
                –∏–º–µ–Ω–Ω–æ –æ—Ç—Ç—É–¥–∞. 
                3. [Metrics and scoring: quantifying the quality of predictions]
                (scikit-learn.org/stable/modules/model_evaluation.html). –û—á–µ—Ä–µ–¥–Ω–∞—è —Å—Å—ã–ª–∫–∞
                –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é `sklearn`, –Ω–æ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –≥–¥–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –≥–æ–≤–æ—Ä–∏—Ç—Å—è –æ 
                –º–µ—Ç—Ä–∏–∫–∞—Ö.
                """)

    elif task == '–†–µ–≥—Ä–µ—Å—Å–∏—è':
        regression_target = st.selectbox(
            '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–æ–Ω–∫—É, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å',
            [None] + numeric_columns)

        if regression_target is None:
            st.info('–í—ã–±–µ—Ä–∏—Ç–µ target. –î–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ —Å–ª–µ–¥—É–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Å—Ç–æ–ª–±–µ—Ü Survived.')
        else:
            with st.beta_expander('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏'):
                regression_n_splits = st.slider('–ö—Ä–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–±–∏–µ–Ω–∏–π', min_value=5, max_value=20,
                                                step=1, value=10)

                features = numeric_columns
                if regression_target in features:
                    features.remove(regression_target)
                regression_features = st.multiselect('–ü—Ä–∏–∑–Ω–∞–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏',
                                                     features, default=features)

                regression_random_state = st.selectbox('–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞ '
                                                       '–±—Ä–∞–ª–∞ –Ω–∞ train –∏ test —Ç–µ –∂–µ –¥–∞–Ω–Ω—ã–µ?',
                                                       [False, True])
                if regression_random_state:
                    regression_random_state = 17
                else:
                    regression_random_state = None

                models = {
                    "Linear Regression": LinearRegression(),
                    "Ridge": Ridge(),
                    "Lasso": Lasso(),
                    "ElasticNet": ElasticNet(),
                    "KNeighborsRegressor": KNeighborsRegressor(),
                    "Decision TreeRegressor": DecisionTreeRegressor(),
                    "SVR": SVR()
                }

                regression_model_name = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏',
                                                     list(models.keys()))

                metrics = {
                    "–°—Ä–µ–¥–Ω—è—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ (MAE)": 'neg_mean_absolute_error',
                    "–°—Ä–µ–¥–Ω—è—è –∫–≤–∞–¥—Ä–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ (MSE)": 'neg_mean_squared_error',
                    "R Squared": 'r2'
                }

            if st.button('–û–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å', key='model_button'):
                df = dataset.dropna()

                X = df[regression_features]
                y = df[regression_target]

                model = models[regression_model_name]

                kfold = KFold(n_splits=10,
                              random_state=regression_random_state)

                results = pd.DataFrame(columns=['–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏', '–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ',
                                                '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ'])
                for metric_name, scoring in metrics.items():
                    result = cross_val_score(model, X, y, cv=kfold, scoring=scoring)
                    results = results.append({'–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏': metric_name,
                                              '–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ': result.mean(),
                                              '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ': result.std()},
                                             ignore_index=True)

                st.markdown("""
                –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –±—É–¥—É—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã 3 –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –¥–ª—è –æ—Ü–µ–Ω–∫–∏ 
                –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –ø—Ä–æ–±–ª–µ–º —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–≥–æ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è:
                
                1. –°—Ä–µ–¥–Ω—è—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.
                2. –°—Ä–µ–¥–Ω—è—è –∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞
                3. $R^2$.
                
                ## –°—Ä–µ–¥–Ω—è—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –æ—à–∏–±–∫–∞
                –°—Ä–µ–¥–Ω—è—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ (–∏–ª–∏ MAE) –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å—É–º–º—É –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö —Ä–∞–∑–ª–∏—á–∏–π 
                –º–µ–∂–¥—É –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏. –≠—Ç–æ –¥–∞–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ —Ç–æ–º, 
                –Ω–∞—Å–∫–æ–ª—å–∫–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –±—ã–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑—ã.

                –ú–µ—Ä–∞ –¥–∞–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ –≤–µ–ª–∏—á–∏–Ω–µ –æ—à–∏–±–∫–∏, –Ω–æ –Ω–µ –¥–∞–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ
                –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏. –¢–æ –µ—Å—Ç—å –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –º–∞—à–∏–Ω—ã –º—ã –º–æ–≥–ª–∏ –æ—à–∏–±–∏—Ç—å—Å—è –Ω–∞ 20 –∫–º/—á,
                –Ω–æ —Å–∫–∞–∑–∞—Ç—å, –¥–≤–∏–≥–∞–ª—Å—è –ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –º–µ–¥–ª–µ–Ω–Ω–µ –∏–ª–∏ –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –Ω–µ —Å–º–æ–≥–ª–∏ –±—ã.
                 
                ## –°—Ä–µ–¥–Ω—è—è –∫–≤–∞–¥—Ä–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞
                
                –°—Ä–µ–¥–Ω—è—è –∫–≤–∞–¥—Ä–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ (–∏–ª–∏ MSE) –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–∞ –Ω–∞ —Å—Ä–µ–¥–Ω—é—é –∞–±—Å–æ–ª—é—Ç–Ω—É—é 
                –æ—à–∏–±–∫—É –≤ —Ç–æ–º, —á—Ç–æ –æ–Ω–∞ –¥–∞–µ—Ç –æ–±—â–µ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ –≤–µ–ª–∏—á–∏–Ω–µ –æ—à–∏–±–∫–∏.

                –í–∑—è—Ç–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è –∏–∑ —Å—Ä–µ–¥–Ω–µ–∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–π –æ—à–∏–±–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ–¥–∏–Ω–∏—Ü—ã –æ–±—Ä–∞—Ç–Ω–æ 
                –≤ –∏—Å—Ö–æ–¥–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –≤—ã—Ö–æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Å–º—ã—Å–ª –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∏ 
                –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è. –≠—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å—Ä–µ–¥–Ω–µ–∫–≤–∞–¥—Ä–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–æ–π (–∏–ª–∏ RMSE).
                
                ## –ú–µ—Ç—Ä–∏–∫–∞ $R ^ 2$
                
                –ú–µ—Ç—Ä–∏–∫–∞ $R ^ 2$ (–∏–ª–∏ R Squared) —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–±–æ—Ä–∞ 
                –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –∑–Ω–∞—á–µ–Ω–∏—è–º. –í —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ —ç—Ç–∞ –º–µ—Ä–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è 
                –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–º –¥–µ—Ç–µ—Ä–º–∏–Ω–∞—Ü–∏–∏.

                –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–∂–¥—É 0 –∏ 1 –¥–ª—è –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
                
                ## –û—Ü–µ–Ω–∫–∞ —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞
                
                –î–∞–Ω–Ω—ã–µ –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞ –±—ã–ª–∏ —Ä–∞–∑–±–∏—Ç—ã –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å—Ç–µ–π –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑ —Å
                –ø–æ–º–æ—â—å—é `sklearn.model_selection.cross_val_score` –∏ `sklearn.model_selection.Kfold`,
                –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω —Ä–∞—Å—Å—á–µ—Ç —Ç—Ä–µ—Ö –≤—ã—à–µ–æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫.
                –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∏–∂–µ:
                """)

                st.dataframe(results)

                st.markdown("""
                –¢–∞–∫–∂–µ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç –ø–æ—Å—Ç—Ä–æ–∏–º scatterplot, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã
                –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö. –í –∏–¥–µ–∞–ª—å–Ω–æ–º —Å–ª—É—á–∞–µ —Ç–æ—á–∫–∏ –¥–æ–ª–∂–Ω—ã –ª–µ–∂–∞—Ç—å –Ω–∞ –æ–¥–Ω–æ–π 
                –ø—Ä—è–º–æ–π, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ø–æ–¥ —É–≥–ª–æ–º 45 –≥—Ä–∞–¥—É—É—Å–æ–≤.
                """)

                x, y = df[regression_features], df[regression_target]
                model = models[regression_model_name]
                model.fit(x,y)
                y_pred = model.predict(x)
                plt.scatter(y_pred, y)
                plt.title("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ vs —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å")
                plt.xlabel("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
                plt.ylabel("–†–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
                st.pyplot(plt)

                st.markdown("""
                ## –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
                
                1. [–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏–∏] ( 
                scikit-learn.org/stable/modules/cross_validation.html). –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ 
                –æ–± —É–∂–µ —É–ø–æ–º—è–Ω—É—Ç–æ–º —Å–ø–æ—Å–æ–±–µ –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏–∏, –∞ —Ç–∞–∫–∂–µ —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ –µ—â–µ —Å–ø–æ—Å–æ–±—ã 
                —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –∏ –∫–∞–∫ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. 
                2. [–°—Ç–∞—Ç—å—è –æ –º–µ—Ç—Ä–∏–∫–∞—Ö –≤ –∑–∞–¥–∞—á–∞—Ö –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏]
                (machinelearningmastery.ru/metrics-evaluate-machine-learning-algorithms-python/). 
                –ö–æ—Ä–æ—Ç–∫–∞—è –æ–±–∑–æ—Ä–Ω–∞—è —Å—Ç–∞—Ç—å—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤. 
                3. [MachineLearning.ru](
                machinelearning.ru/wiki/index.php?title=–ó–∞–≥–ª–∞–≤–Ω–∞—è_—Å—Ç—Ä–∞–Ω–∏—Ü–∞). 
                –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ-–∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ—Å—É—Ä—Å, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã–π
                –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—é –æ–±—Ä–∞–∑–æ–≤ –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö. 
                4. [–†–∞–∑–±–æ—Ä –∑–∞–¥–∞—á–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –¥–∞—Ç–∞—Å–µ—Ç–∞ Boston](
                kaggle.com/shreayan98c/boston-house-price-prediction/data?select=housing.csv)
                """)

    else:
        st.info('–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞—á—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è')


# Add all your application here

app.add_app("README.md", home_app)
app.add_app("–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞—Ç–∞—Å–µ—Ç–∞ —á–µ—Ä–µ–∑ Pandas", data_app)
app.add_app("–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤", graphics_app)
app.add_app("–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π", model_app)

# The main app
app.run()
